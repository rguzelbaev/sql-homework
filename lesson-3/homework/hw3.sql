--üü¢ Easy-Level Tasks (10)
--1. Define and explain the purpose of BULK INSERT in SQL Server.
–ú–∞—Å—Å–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞ –≤ SQL Server, –∏–ª–∏ bulk insert –Ω—É–∂–Ω–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –û—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö, –Ω–≥–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–∏–ª–ª–∏–æ–Ω—ã —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BULK INSERT –ø–æ–∑–≤–æ–ª–∏—Ç —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –≥–æ—Ä–∞–∑–¥–æ –±—ã—Å—Ç—Ä–µ–µ —á–µ–º –∏—Å–ø–æ–¥—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ —Ä–∞–∑ insert –∫–æ–º–∞–Ω–¥—ã. ;
--2. List four file formats that can be imported into SQL Server.
–§–æ—Ä–º–∞—Ç XML, TXT, CSV, SQL;
--3. Create a table Products with columns: ProductID (INT, PRIMARY KEY), ProductName (VARCHAR(50)), Price (DECIMAL(10,2)).
create table Products (ProductID int Primary key, ProductName varchar(50), Price decimal(10,2))
--4. Insert three records into the Products table using INSERT INTO.
insert into Products values (1, 'Water', 10),
							(2, 'Air', 5),
							(3, 'Ground', 10);
--5. Explain the difference between NULL and NOT NULL.
null - –ø—É—Å—Ç–æ–µ, –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, not null - –Ω–µ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ï—Å–ª–∏ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Ç–∞–∫–∏–µ —É—Å–ª–æ–≤–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ —Å—Ç–æ–ª–±–µ—Ü –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å NULL –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—å, —Ç.–µ. –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –≤ —ç—Ç–æ–º —Å—Ç–æ–ª—é—Ü–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –∫–∞–∫–æ–µ-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
--6. Add a UNIQUE constraint to the ProductName column in the Products table.
ALTER TABLE Products
ADD CONSTRAINT UC_ProductName UNIQUE (ProductName);
--7. Write a comment in a SQL query explaining its purpose.
--–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –≤–æ–ø—Ä–æ—Å—É 8: --–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ "CategoryID" –≤ —Ç–∞–±–ª–∏—Ü—É "Products"
--8. Add CategoryID column to the Products table.
ALTER TABLE Products
ADD CategoryID int;
--9. Create a table Categories with a CategoryID as PRIMARY KEY and a CategoryName as UNIQUE.
Create table Categories (CategoryID int PRIMARY KEY, CategoryName varchar(50) UNIQUE)
--10. Explain the purpose of the IDENTITY column in SQL Server.
Identity –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, –≤—Å—Ç–∞–≤–ª—è–µ–º–æ–π –≤ —Ç–∞–±–ª–∏—Ü—É. –≠—Ç–æ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –∫–ª—é—á–µ–π, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω—É–º–µ—Ä–∞—Ü–∏—é —Å—Ç—Ä–æ–∫ –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤.
----üü† Medium-Level Tasks (10)
--11. Use BULK INSERT to import data from a text file into the Products table.
bulk insert Products
from 'C:\Users\asus\Desktop\MAAB SQL & Python\SQL\Products.txt'
with(
	fIELDTERMINATOR=',',
	rowterminator='\n',
	FIRSTROW=1
	);
--12. Create a FOREIGN KEY in the Products table that references the Categories table.
ALTER TABLE Products
ADD CONSTRAINT FK_CategoryID
FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID);
--13. Explain the differences between PRIMARY KEY and UNIQUE KEY.
a)unique can use any time  
primary only once
b)unique allow null
primary cannot allow null
--14. Add a CHECK constraint to the Products table ensuring Price > 0.
alter table Products
add constraint check_Price check (Price > 0)
--15. Modify the Products table to add a column Stock (INT, NOT NULL).
ALTER TABLE Products
ADD Stock int not null;
--16. Use the ISNULL function to replace NULL values in Price column with a 0.
select ProductName, isnull(Price, 0) as Price1
from Products
--17. Describe the purpose and usage of FOREIGN KEY constraints in SQL Server.
–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å —Å—Å—ã–ª–æ–∫, –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—è, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ–ª—å–∑—è –≤–Ω–æ—Å–∏—Ç—å –≤ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞, –µ—Å–ª–∏ —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–ª—é—á–∞
----üî¥ Hard-Level Tasks (10)
--18. Write a script to create a Customers table with a CHECK constraint ensuring Age >= 18.
create table Customers (id int, f_name varchar(50), age int, constraint chk_age check (age>=18))
--19. Create a table with an IDENTITY column starting at 100 and incrementing by 10.
create table tbl_ident (id int identity(100,10), [name] varchar(10))
--20. Write a query to create a composite PRIMARY KEY in a new table OrderDetails.
create table OrderDetails (order_id int, product_id int primary key (order_id, product_id))
--21. Explain the use of COALESCE and ISNULL functions for handling NULL values.
–§—É–Ω–∫—Ü–∏–∏ COALESCE –∏ ISNULL –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π NULL –≤ SQL, 
–≤–æ–∑–≤—Ä–∞—â–∞—è –ø–µ—Ä–≤–æ–µ –Ω–µ-NULL –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –∑–∞–º–µ–Ω—è—è NULL –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. 
COALESCE –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –∞ ISNULL —Ç–æ–ª—å–∫–æ –¥–≤–∞
--22. Create a table Employees with both PRIMARY KEY on EmpID and UNIQUE KEY on Email.
CREATE TABLE Employees (
    EmpID INT PRIMARY KEY,
    Email VARCHAR(50) UNIQUE,
    fName VARCHAR(50),
    LName VARCHAR(50),
    );
--23. Write a query to create a FOREIGN KEY with ON DELETE CASCADE and ON UPDATE CASCADE options.
ALTER TABLE Products
ADD CONSTRAINT constr_fk FOREIGN KEY CategoryID REFERENCES Categories(CategoryID)
ON DELETE CASCADE
ON UPDATE CASCADE;

